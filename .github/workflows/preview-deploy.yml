name: Preview Deployment

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy for preview'
        required: true
        default: 'main'

jobs:
  preview-deploy:
    name: Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    environment: preview
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.head_ref }}

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-deps

      - name: Build Next.js application for preview
        run: npm run pages:build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Deploy to Cloudflare Pages (Preview)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .vercel/output/static --project-name=booklo --compatibility-date=2025-01-01

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const branch = context.payload.pull_request.head.ref;
            const sha = context.payload.pull_request.head.sha.substring(0, 7);
            
            // Generate preview URL (Cloudflare Pages format)
            const previewUrl = `https://${sha}.booklo.pages.dev`;
            
            const comment = `## 🚀 Preview Deployment
            
            Your preview deployment is ready!
            
            **🔗 Preview URL:** [${previewUrl}](${previewUrl})
            
            **📍 Details:**
            - **Branch:** \`${branch}\`
            - **Commit:** \`${sha}\`
            - **Built at:** ${new Date().toLocaleString()}
            
            This preview will be automatically updated when you push new commits to this PR.`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🚀 Preview Deployment')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            } 